if($args.length -lt 4)
{
    echo "Usage: ./build.ps1 <x86|x64|ninja> <OPENSSL_ROOT_DIR> <GETOPT_LIB_DIR> <GETOPT_INCLUDE_DIR>"
    echo ""
    echo "This is a script to build yubihsm-shell on Windows using CMake and MSVC. It executes the following steps:"
    echo " 1. Creates a directory (named 'build_win32' or 'build_win64') containing the built files. If the directory exists, it's deleted and recreated again"
    echo " 2. Runs the CMake command with basic command line arguments"
    echo " 3. Convert the encoding of the .rc files generated by the CMake command"
    echo " 4. Build the binaries"
    echo ""
    echo ""
    echo "   x86                    builds using X86 architecture by adding '-A Win32' argument to the cmake command"
    echo "   x64                    builds using X64 architecture by adding '-A x64' argument to the cmake command"
    echo "   ninja                  builds using Ninja CMake generator"
    echo ""
    echo "   OPENSSL_ROOT_DIR       The directory containing the OpenSSL files. It's expected to have a 'bin', a 'lib' and an 'include' directory"
    echo "   GETOPT_LIB_DIR         The directory containing the getopt .lib file"
    echo "   GETOPT_INCLUDE_DIR     The directory containing the getopt.h file"
    exit
}


$ARCH = $args[0]
$env:OPENSSL_ROOT_DIR = $args[1]
$env:GETOPT_LIB_DIR = $args[2]
$env:GETOPT_INCLUDE_DIR = $args[3]

Set-PSDebug -Trace 1

if($ARCH -eq "ninja")
{
    Remove-Item -Path "build_ninja" -Force -Recurse -ErrorAction SilentlyContinue
    mkdir build_ninja; cd build_ninja
    cmake -GNinja -DGETOPT_LIB_DIR="$env:GETOPT_LIB_DIR" -DGETOPT_INCLUDE_DIR="$env:GETOPT_INCLUDE_DIR"  ..

}
elseif($ARCH -eq "x86")
{
    Remove-Item -Path "build_win32" -Force -Recurse -ErrorAction SilentlyContinue
    mkdir build_win32; cd build_win32
    cmake -A Win32 -DGETOPT_LIB_DIR="$env:GETOPT_LIB_DIR" -DGETOPT_INCLUDE_DIR="$env:GETOPT_INCLUDE_DIR"  ..
}
elseif($ARCH -eq "x64")
{
    Remove-Item -Path "build_win64" -Force -Recurse -ErrorAction SilentlyContinue
    mkdir build_win64; cd build_win64
    cmake -A x64 -DGETOPT_LIB_DIR="$env:GETOPT_LIB_DIR" -DGETOPT_INCLUDE_DIR="$env:GETOPT_INCLUDE_DIR"  ..
}

Get-Content .\lib\version.rc | Out-File -encoding ASCII .\lib\version.rc
Get-Content .\lib\version_winhttp.rc | Out-File -encoding ASCII .\lib\version_winhttp.rc
Get-Content .\lib\version_winusb.rc | Out-File -encoding ASCII .\lib\version_winusb.rc
Get-Content .\src\version.rc | Out-File -encoding ASCII .\src\version.rc
Get-Content .\yhwrap\version.rc | Out-File -encoding ASCII .\yhwrap\version.rc

if($ARCH -eq "ninja")
{
    ninja
}
else
{
    cmake --build . -v
}
cd ..

Set-PSDebug -Trace 0